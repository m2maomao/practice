{
  "include": ["src"],
  "compilerOptions": {
    /* Basic Options */
    // "incremental": true,                   /* 增量编译 */
    // "diagnostics": true,                   /* 打印诊断信息 */

    "target": "es5",                          /* 目标语言版本 */
    "module": "commonjs",                     /* 生成代码的模块标准 */
    // "lib": [],                             /* TS 需要引用的库，即声明文件，es5默认“dom”， “es5”, "scripthost" */
    // "allowJs": true,                          /* 允许编译JS文件(js、jsx) */
    // "checkJs": true,                          /* 允许在JS文件中报错，通常与 allowJS 一起使用 */
    // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    // "declaration": true,                      /* 生成声明文件 */
    // "declarationDir": "./d",                  /* 声明文件的路径 */
    // "emitDeclarationOnly": false,              /* 只生成声明文件 */
    // "declarationMap": true,                   /* 生成声明文件的 sourceMap */
    // "sourceMap": true,                     /* 生成目标文件的 sourceMap */
    // "inlineSourceMap": true,               /* 生成目标文件的 inline sourceMap */
    // "outFile": "./",                       /* 将多个相互依赖的文件生成一个文件，可以用在AMD模块中 */
    // "outDir": "./out",                        /* 指定输出目录 */
    // "rootDir": "./src",                       /* 指定输入文件目录（用于输出） */
    // "composite": true,                     /* Enable project compilation */
    // "tsBuildInfoFile": "./",               /* 增量编译文件的存储位置 */
    // "removeComments": true,                /* 删除注释 */
    // "noEmit": true,                        /* 不输出文件 */
    // "noEmitOnError": true,                 /* 发生错误时不输出文件 */ 
    // "noEmitHelpers": true,                    /* 不生成 helper 函数，需额外安装ts-helpers */
    // "importHelpers": true,                    /* 通过tslib引入 helper 函数*/
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* 降级遍历器的实现（es3/5） */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true,                           /* 开启所有严格的类型检查 */
    // "noImplicitAny": true,                 /* 不允许隐式的 any 类型 */
    // "strictNullChecks": true,              /* 不允许把null、undefined赋值给其他类型变量 */
    // "strictFunctionTypes": true,           /* 不允许函数参数双向协变 */
    // "strictBindCallApply": true,           /* 严格的 bind/call/apply 检查 */
    // "strictPropertyInitialization": true,  /* 类的实例属性必须初始化 */
    // "noImplicitThis": true,                /* 不允许 this 有隐式的 any 类型 */
    // "alwaysStrict": true,                  /* 在代码中注入 "use strict" */

    /* Additional Checks */
    // "noUnusedLocals": true,                /* 检查只声明，未使用的局部变量 */
    // "noUnusedParameters": true,            /* 检查未使用的函数参数 */
    // "noImplicitReturns": true,             /* 每个分支都要有返回值 */
    // "noFallthroughCasesInSwitch": true,    /* 防止 switch 语句贯穿 */

    /* Module Resolution Options */
    // "moduleResolution": "node",            /* 模块解析策略 */
    // "baseUrl": "./",                       /* 解析非相对模块的基地址 */
    // "paths": {
    // "jquery": ["node_modules/.jquery/dist/jquery.slim.min.js] 
    //,                                       /* 只想使用某一具体版本,路径相对于baseUrl */
    "rootDirs": ["src", "out"],                        /* 将多个目录放在一个虚拟目录下，用于运行时 */
    // "typeRoots": [],                       /* 声明文件目录，默认 node_modules/@types */
    // "types": [],                           /* 声明文件包 */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    // "esModuleInterop": true,                  /* 允许 export = 导出，由 import from 导入 */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* 允许在模块中访问 UMD 全局变量 */

    // "listEmittedFiles": true,                 /* 打印输出的文件 */
    // "listFiles": true,                        /* 打印编译的文件（包括引用的声明文件） */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "forceConsistentCasingInFileNames": true  /* Disallow inconsistently-cased references to the same file. */
  }
}
